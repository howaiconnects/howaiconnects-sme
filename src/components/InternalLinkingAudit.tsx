/**
 * Internal Linking & SEO Audit Dashboard
 * Comprehensive audit report for internal linking, routing, and SEO metadata
 */

import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Separator } from "@/components/ui/separator";
import { 
  CheckCircle, 
  AlertCircle, 
  ExternalLink, 
  Search,
  Globe,
  Link as LinkIcon,
  Navigation,
  BarChart3,
  FileText,
  Shield
} from "lucide-react";
import { Link, useLocation } from "react-router-dom";

interface LinkAuditResult {
  url: string;
  status: 'working' | 'broken' | 'external' | 'anchor';
  target?: string;
  component: string;
  lineNumber?: number;
  type: 'navigation' | 'internal' | 'external' | 'anchor';
}

interface RouteAuditResult {
  path: string;
  component: string;
  status: 'active' | 'missing' | 'deprecated';
  seoConfigured: boolean;
  hasCanonical: boolean;
  hasMetaDescription: boolean;
}

interface SEOAuditResult {
  page: string;
  title: string;
  description: string;
  keywords: string[];
  hasStructuredData: boolean;
  hasCanonical: boolean;
  status: 'excellent' | 'good' | 'needs-improvement' | 'critical';
}

export const InternalLinkingAudit: React.FC = () => {
  const [activeTab, setActiveTab] = useState('overview');
  const location = useLocation();

  // Mock audit data - in a real implementation, this would be generated by scanning the codebase
  const linkAuditResults: LinkAuditResult[] = [
    { url: '/', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/about', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/contact', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/services', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/early-access', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/projects/howaiconnects-platform', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/projects/dealstream', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/projects/ost2pst', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/web-apps/path-to-canada', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/web-apps/ai-data-gem', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/resources', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/resources/blog', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/resources/case-studies', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/resources/tools', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/resources/templates', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/courses', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/web-app-development', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/done-for-you-ai-agency', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/services/ai-automation-solutions/marketing-automation', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/services/ai-automation-solutions/customer-service-automation', status: 'working', component: 'Navbar', type: 'navigation' },
    { url: '/services/ai-consultation/ai-readiness-assessment', status: 'working', component: 'Navbar', type: 'navigation' },
  ];

  const routeAuditResults: RouteAuditResult[] = [
    { path: '/', component: 'Index', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/about', component: 'About', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/contact', component: 'Contact', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/services', component: 'Services', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/early-access', component: 'EarlyAccess', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/projects/howaiconnects-platform', component: 'HowAIConnectsPlatform', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/projects/dealstream', component: 'DealStream', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/projects/ost2pst', component: 'OST2PST', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/web-apps/path-to-canada', component: 'PathtoCanadaPage', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/web-apps/ai-data-gem', component: 'AIDataGemPage', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/resources', component: 'Resources', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/resources/blog', component: 'Blog', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/resources/case-studies', component: 'CaseStudiesPage', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/resources/tools', component: 'ToolsPage', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/resources/templates', component: 'AutomationTemplatesPage', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/courses', component: 'Courses', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/web-app-development', component: 'WebAppDevelopment', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
    { path: '/done-for-you-ai-agency', component: 'DoneForYouAIAgency', status: 'active', seoConfigured: true, hasCanonical: true, hasMetaDescription: true },
  ];

  const seoAuditResults: SEOAuditResult[] = [
    {
      page: 'Homepage',
      title: 'AI Business Automation Platform | Toronto',
      description: 'Transform your business with AI automation solutions. Custom web apps, workflow automation, and intelligent business insights.',
      keywords: ['AI automation Toronto', 'business automation', 'AI consulting'],
      hasStructuredData: true,
      hasCanonical: true,
      status: 'excellent'
    },
    {
      page: 'Early Access',
      title: 'Early Access Program | HowAIConnects AI Platform',
      description: 'Join our exclusive early access program. Be among the first to experience next-generation AI automation.',
      keywords: ['early access AI', 'AI platform preview', 'exclusive AI features'],
      hasStructuredData: true,
      hasCanonical: true,
      status: 'excellent'
    },
    {
      page: 'HowAIConnects Platform',
      title: 'HowAIConnects AI Platform | Enterprise Intelligence Framework',
      description: 'Explore our flagship AI platform - a unified framework for enterprise automation and intelligent workflows.',
      keywords: ['AI platform', 'enterprise AI framework', 'business intelligence'],
      hasStructuredData: true,
      hasCanonical: true,
      status: 'excellent'
    }
  ];

  // Calculate statistics
  const workingLinks = linkAuditResults.filter(link => link.status === 'working').length;
  const brokenLinks = linkAuditResults.filter(link => link.status === 'broken').length;
  const externalLinks = linkAuditResults.filter(link => link.status === 'external').length;
  const totalLinks = linkAuditResults.length;

  const activeRoutes = routeAuditResults.filter(route => route.status === 'active').length;
  const seoConfiguredRoutes = routeAuditResults.filter(route => route.seoConfigured).length;
  const totalRoutes = routeAuditResults.length;

  const excellentSEO = seoAuditResults.filter(seo => seo.status === 'excellent').length;
  const totalSEOPages = seoAuditResults.length;

  return (
    <div className="container mx-auto p-6 space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold">Internal Linking & SEO Audit</h1>
          <p className="text-muted-foreground mt-2">Comprehensive audit of internal links, routing, and SEO implementation</p>
        </div>
        <Badge variant="outline" className="text-sm">
          <CheckCircle className="h-4 w-4 mr-1" />
          Audit Complete
        </Badge>
      </div>

      {/* Overview Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Internal Links</CardTitle>
            <LinkIcon className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-600">{workingLinks}/{totalLinks}</div>
            <p className="text-xs text-muted-foreground">
              {((workingLinks / totalLinks) * 100).toFixed(1)}% working properly
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Routes Active</CardTitle>
            <Navigation className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-blue-600">{activeRoutes}/{totalRoutes}</div>
            <p className="text-xs text-muted-foreground">
              All routes properly configured
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">SEO Configured</CardTitle>
            <Search className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-purple-600">{seoConfiguredRoutes}/{totalRoutes}</div>
            <p className="text-xs text-muted-foreground">
              Pages with proper SEO metadata
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">SEO Score</CardTitle>
            <BarChart3 className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-emerald-600">{excellentSEO}/{totalSEOPages}</div>
            <p className="text-xs text-muted-foreground">
              Excellent SEO implementation
            </p>
          </CardContent>
        </Card>
      </div>

      <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-4">
        <TabsList className="grid w-full grid-cols-4">
          <TabsTrigger value="overview">Overview</TabsTrigger>
          <TabsTrigger value="links">Internal Links</TabsTrigger>
          <TabsTrigger value="routes">Routes</TabsTrigger>
          <TabsTrigger value="seo">SEO Audit</TabsTrigger>
        </TabsList>

        <TabsContent value="overview" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Audit Summary</CardTitle>
              <CardDescription>Overall health of internal linking and SEO implementation</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <h4 className="font-semibold flex items-center">
                    <CheckCircle className="h-4 w-4 text-green-500 mr-2" />
                    Strengths
                  </h4>
                  <ul className="text-sm space-y-1 text-muted-foreground">
                    <li>• All internal navigation links using React Router</li>
                    <li>• Comprehensive SEO metadata implementation</li>
                    <li>• Proper structured data (JSON-LD)</li>
                    <li>• Updated sitemap.xml with all routes</li>
                    <li>• Canonical URLs implemented</li>
                    <li>• Mobile-responsive navigation</li>
                  </ul>
                </div>
                <div className="space-y-2">
                  <h4 className="font-semibold flex items-center">
                    <AlertCircle className="h-4 w-4 text-amber-500 mr-2" />
                    Recommendations
                  </h4>
                  <ul className="text-sm space-y-1 text-muted-foreground">
                    <li>• Add breadcrumb navigation</li>
                    <li>• Implement automated sitemap generation</li>
                    <li>• Add related content sections</li>
                    <li>• Include social sharing meta tags</li>
                    <li>• Add search functionality</li>
                    <li>• Monitor Core Web Vitals</li>
                  </ul>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="links" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Internal Link Analysis</CardTitle>
              <CardDescription>All internal navigation links and their status</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-2 max-h-96 overflow-y-auto">
                {linkAuditResults.map((link, index) => (
                  <div key={index} className="flex items-center justify-between p-2 border rounded">
                    <div className="flex items-center space-x-2">
                      {link.status === 'working' ? 
                        <CheckCircle className="h-4 w-4 text-green-500" /> :
                        <AlertCircle className="h-4 w-4 text-red-500" />
                      }
                      <code className="text-sm">{link.url}</code>
                      <Badge variant="outline" className="text-xs">{link.component}</Badge>
                    </div>
                    <Badge variant={link.status === 'working' ? 'default' : 'destructive'}>
                      {link.status}
                    </Badge>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="routes" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Route Configuration</CardTitle>
              <CardDescription>All application routes and their configuration status</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-2 max-h-96 overflow-y-auto">
                {routeAuditResults.map((route, index) => (
                  <div key={index} className="flex items-center justify-between p-2 border rounded">
                    <div className="flex items-center space-x-2">
                      <CheckCircle className="h-4 w-4 text-green-500" />
                      <code className="text-sm">{route.path}</code>
                      <Badge variant="outline" className="text-xs">{route.component}</Badge>
                    </div>
                    <div className="flex space-x-1">
                      <Badge variant={route.seoConfigured ? 'default' : 'destructive'}>
                        SEO: {route.seoConfigured ? 'Yes' : 'No'}
                      </Badge>
                      <Badge variant={route.hasCanonical ? 'default' : 'destructive'}>
                        Canonical: {route.hasCanonical ? 'Yes' : 'No'}
                      </Badge>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="seo" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>SEO Implementation</CardTitle>
              <CardDescription>SEO metadata and structured data analysis</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {seoAuditResults.map((seo, index) => (
                  <div key={index} className="border rounded-lg p-4 space-y-2">
                    <div className="flex items-center justify-between">
                      <h4 className="font-semibold">{seo.page}</h4>
                      <Badge variant={seo.status === 'excellent' ? 'default' : 'secondary'}>
                        {seo.status}
                      </Badge>
                    </div>
                    <div className="space-y-1">
                      <p className="text-sm"><strong>Title:</strong> {seo.title}</p>
                      <p className="text-sm"><strong>Description:</strong> {seo.description}</p>
                      <p className="text-sm"><strong>Keywords:</strong> {seo.keywords.join(', ')}</p>
                    </div>
                    <div className="flex space-x-2">
                      <Badge variant={seo.hasStructuredData ? 'default' : 'destructive'}>
                        Structured Data: {seo.hasStructuredData ? 'Yes' : 'No'}
                      </Badge>
                      <Badge variant={seo.hasCanonical ? 'default' : 'destructive'}>
                        Canonical: {seo.hasCanonical ? 'Yes' : 'No'}
                      </Badge>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>

      {/* Action Items */}
      <Card>
        <CardHeader>
          <CardTitle>Next Steps</CardTitle>
          <CardDescription>Recommended actions to improve SEO and user experience</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="space-y-2">
              <h4 className="font-semibold">Quick Wins</h4>
              <ul className="text-sm space-y-1">
                <li className="flex items-center">
                  <CheckCircle className="h-3 w-3 text-green-500 mr-2" />
                  Internal links fixed to use React Router
                </li>
                <li className="flex items-center">
                  <CheckCircle className="h-3 w-3 text-green-500 mr-2" />
                  Sitemap.xml updated with all routes
                </li>
                <li className="flex items-center">
                  <CheckCircle className="h-3 w-3 text-green-500 mr-2" />
                  SEO metadata comprehensive
                </li>
              </ul>
            </div>
            <div className="space-y-2">
              <h4 className="font-semibold">Future Improvements</h4>
              <ul className="text-sm space-y-1">
                <li className="flex items-center">
                  <AlertCircle className="h-3 w-3 text-amber-500 mr-2" />
                  Add breadcrumb navigation
                </li>
                <li className="flex items-center">
                  <AlertCircle className="h-3 w-3 text-amber-500 mr-2" />
                  Implement site search
                </li>
                <li className="flex items-center">
                  <AlertCircle className="h-3 w-3 text-amber-500 mr-2" />
                  Add related content sections
                </li>
              </ul>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default InternalLinkingAudit;